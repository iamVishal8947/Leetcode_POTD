Time Complexity - O(n).
Space Complexity - O(1).

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

class Solution {
    public int[] rearrangeArray(int[] nums) {
        int len=nums.length;
        int[] positive=new int[len/2];
        int[] negative=new int[len/2];
        int p=0;
        int n=0;
        for(int i=0;i<len;i++){
            if(nums[i]>0){
               positive[p]=nums[i];
               p++;
            }
        }
        for(int i=0;i<len;i++){
            if(nums[i]<0){
                negative[n]=nums[i];
                n++;
            }
        }
        int pos=0;
        int neg=0;

        for(int i=0;i<len;i++){
            if(i%2 == 0){
                nums[i]=positive[pos];
                pos++;
            }
            else{
                nums[i]=negative[neg];
                neg++;
            }
        }
        return nums;      
    }
}
